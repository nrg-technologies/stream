CREATE OR REPLACE PACKAGE TOKEN IS
  FUNCTION GENERATE(DATA VARCHAR2, KEY VARCHAR2) RETURN VARCHAR2;
END TOKEN;

CREATE OR REPLACE PACKAGE BODY TOKEN IS
  FUNCTION GENERATE(DATA VARCHAR2, KEY VARCHAR2)
    RETURN VARCHAR2
    IS
    RESULT VARCHAR2(24);
    TIMESTAMP NUMBER;
    BUFFER VARCHAR2(1000) := '';
    T VARCHAR2(1);
  BEGIN
    SELECT EXTRACT(
    DAY FROM(
      SYS_EXTRACT_UTC(SYSTIMESTAMP) - TO_TIMESTAMP('1970-01-01', 'YYYY-MM-DD')
      )  
    ) * 86400000 + TO_NUMBER(
    TO_CHAR(
      SYS_EXTRACT_UTC(SYSTIMESTAMP),
      'SSSSSFF3'
    )
    )
    INTO TIMESTAMP
    FROM DUAL;
    TIMESTAMP := FLOOR(TIMESTAMP / 200);
    WHILE TIMESTAMP <> 0 LOOP
    SELECT
    CASE MOD(TIMESTAMP, 16)
      WHEN 10 THEN 'A'
      WHEN 11 THEN 'B'
      WHEN 12 THEN 'C'
      WHEN 13 THEN 'D'
      WHEN 14 THEN 'E'
      WHEN 15 THEN 'F'
      ELSE TO_CHAR(MOD(TIMESTAMP, 16))
    END
    INTO T FROM DUAL;
    BUFFER := BUFFER || T;
    TIMESTAMP := FLOOR(TIMESTAMP / 16);
    END LOOP;
    SELECT REVERSE(BUFFER)
    INTO BUFFER
    FROM DUAL;
    RESULT := UTL_RAW.CAST_TO_VARCHAR2(
    UTL_ENCODE.BASE64_ENCODE(
      DBMS_OBFUSCATION_TOOLKIT.MD5(
      INPUT => DBMS_CRYPTO.MAC(
        SRC => UTL_I18N.STRING_TO_RAW(DATA, 'AL32UTF8') || LPAD(BUFFER, 16, '0'),
        TYP => 2,
        KEY => UTL_I18N.STRING_TO_RAW(KEY, 'AL32UTF8')
      )
      )
      )
    );
    RETURN(RESULT);
  END;
END TOKEN;
